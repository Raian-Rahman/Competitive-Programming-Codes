//coded by: pranonrahman-------------------------------------
//-----------------------------------------------------------
//-----------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#define O_O ios_base::sync_with_stdio(0); cin.tie(NULL)
#define endl '\n'
#define PI acos(-1.0)
#define CASE(n) cout << "Case " << n << ": "
#define CASE_(n) cout << "Case " << n << endl
#define FIXED(n) cout << fixed << setprecision(n)
#define testPrint(n) cout << "test" << n << endl;


int main()
{
    O_O;
    long long t=1;
   // cin >> t;
    long long T = t;
    while(t--)
    {
        //write your code here
        long long n;
        cin >> n;
        if(n%2==0)
        {
            set<pair<int,int>>v;
            int k = 2*n-1;
            for(int i=1;i<=k;i++)
            {
                v.insert({1,i});
                v.insert({2,i});
                v.insert({3,i});
            }
            v.insert({2,0});
            v.insert({2,k+1});
            for(int i=1;i<=k;i+=2)
            {
                v.insert({0,i});
                v.insert({4,i});
            }
            for(int i=2;i<=k;i+=4)
            {
                v.insert({0,i});
                v.insert({4,i});
            }
            cout << v.size() << endl;
            for(auto it:v)
            {
                cout << it.first << ' ' << it.second << endl;
            }
        }
        else 
        {
            
            set<pair<int,int>>v;
            int k = 2*n-1;
            for(int i=1;i<=k;i++)
            {
                v.insert({1,i});
                v.insert({2,i});
                v.insert({3,i});
            }
            v.insert({2,0});
            v.insert({2,k+1});
            for(int i=1;i<=k;i+=2)
            {
                v.insert({0,i});
                v.insert({4,i});
            }
            for(int i=2;i<=k;i+=4)
            {
                v.insert({0,i});
                v.insert({4,i});
            }
            cout << v.size() << endl;
            for(auto it:v)
            {
                cout << it.first << ' ' << it.second << endl;
            }
        }

    }
    return 0;
}



