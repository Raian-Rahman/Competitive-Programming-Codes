//coded by: pranonrahman-------------------------------------
//-----------------------------------------------------------
//-----------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#define O_O ios_base::sync_with_stdio(0); cin.tie(NULL)
#define endl '\n'
#define PI acos(-1.0)
#define CASE(n) cout << "Case " << n << ": "
#define CASE_(n) cout << "Case " << n << endl
#define FIXED(n) cout << fixed << setprecision(n)
#define testPrint(n) cout << "test" << n << endl;


int main()
{
    O_O;
    long long t=1;
   // cin >> t;
    long long T = t;
    while(t--)
    {
        //write your code here
        int n;
        cin >> n;
        int arr[n+44];
        int f=1;
        int mxi[n+44];
        map<int,int>mp;
        arr[0]=0;
        for(int i=1;i<=n;i++)
        {
            cin >> arr[i];
            mp[arr[i]]++;
            if(arr[i]>i)    f=0;
            else if(arr[i]<arr[i-1] and i!=0)   f=0;
        }
        int mx=1;
        int b[n+6];
        set<int>st;
        for(int i=0;i<=n;i++)   st.insert(i);
        for(int i=1;i<=n;i++)    st.erase(arr[i]);
        if(f==0)
        {
            cout << -1 << endl;
            return 0;
        }
        for(int i=1;i<=n ;i++)
        {
        //    cout << i << ' ' << *(st.begin()) << ' ' << arr[i] << ' ' << mx << endl;
            if(*(st.begin())>=arr[i])
            {
             //   cout << i << " in if" << endl;
                if(mp[mx]==0)   b[i]=mx;
                else
                {
                    while(mp[mx])   mx++;
                    b[i]=mx;
                    mp[mx]=1;
                }
                st.erase(mx);
                mx++;
            }
            else
            {
                b[i]=*st.begin();
                mx = b[i];
                mx++;
                st.erase(b[i]);
            }
        }
        for(int i=1;i<=n;i++) cout << b[i] << ' ' ;
        cout << endl;
    }
    return 0;
}



